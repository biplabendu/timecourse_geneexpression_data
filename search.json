[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Compare time-course gene expression across species",
    "section": "",
    "text": "This website contain analyses by Aman and Billu for an on-going project that compares time-series gene expression data across species.\nMajority of the data sets used are from the paper by Laloum and Robinson-Rechavi (add reference here)."
  },
  {
    "objectID": "index.html#some-issues",
    "href": "index.html#some-issues",
    "title": "Compare time-course gene expression across species",
    "section": "Some issues:",
    "text": "Some issues:\nNot all of the above Cflo genes are 1:1 orthologs, some likely have paralogs in other species.\n\n\nFor how many ant genes, there are ≥ 2 genes in at least one more species?\n\n\n\nNumber of 1:1 orthlogs between Cflo and other species\n\n\nCflo:other species (orthology)\nNumber of genes\n\n\n\n\n1:1\n2257\n\n\n1:n possible\n368"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Aman Prasanna\n\n\n\nBiplabendu (Billu) Das\nbiplabendu.das@gmail.com\nhttps://biplabendu.github.io/homepage/"
  },
  {
    "objectID": "build_plot_gcn.html",
    "href": "build_plot_gcn.html",
    "title": "Build gene co-expression network (GCN) from time-course gene expression data",
    "section": "",
    "text": "Show code\nlibrary(dplyr)\nlibrary(dbplyr)\nlibrary(ggplot2)\nfor (i in list.files(here::here(\"R\"), full.names = TRUE)) source(i)\n\n# SAMPLE NAME\n## specify sample name\nsample.names &lt;- c(\"dmel-head\",\"mmus-brain_stem\")\nsample.cycles &lt;- c(\"LD\", \"DD\")\n\n## SPECIFY THE DATASET TO BUILD GCN WITH\nwhich.sample &lt;- sample.names[1]"
  },
  {
    "objectID": "build_plot_gcn.html#user-input-required--",
    "href": "build_plot_gcn.html#user-input-required--",
    "title": "Build gene co-expression network (GCN) from time-course gene expression data",
    "section": "USER INPUT REQUIRED —-",
    "text": "USER INPUT REQUIRED —-\nTo create the adjacency matrix, we need to first identify the soft-thresholding power (see WGCNA for more info).\n\n\nShow code\nwriteLines(\"Performing network topology analysis to pick soft-thresholding power\")\n\n\nPerforming network topology analysis to pick soft-thresholding power\n\n\nShow code\n# Choose a set of soft-thresholding powers\npowers = c(c(1:10), seq(from = 12, to=30, by=2))\n# # Call the network topology analysis function\nsft = WGCNA::pickSoftThreshold(datExpr, powerVector = powers, verbose = 5)\n\n\npickSoftThreshold: will use block size 5313.\n pickSoftThreshold: calculating connectivity for given powers...\n   ..working on genes 1 through 5313 of 5313\n   Power SFT.R.sq   slope truncated.R.sq mean.k. median.k. max.k.\n1      1    0.954  3.2000         0.9630    2670    2780.0   3370\n2      2    0.937  1.3000         0.9410    1770    1840.0   2600\n3      3    0.894  0.6190         0.8910    1310    1340.0   2160\n4      4    0.842  0.2670         0.8390    1030    1040.0   1860\n5      5    0.187  0.0532         0.0652     844     832.0   1650\n6      6    0.565 -0.0924         0.5730     709     687.0   1480\n7      7    0.828 -0.1940         0.8370     609     581.0   1350\n8      8    0.880 -0.2800         0.8760     530     496.0   1240\n9      9    0.906 -0.3470         0.9090     468     428.0   1140\n10    10    0.925 -0.4000         0.9360     417     373.0   1060\n11    12    0.931 -0.4870         0.9460     339     291.0    934\n12    14    0.917 -0.5550         0.9310     283     235.0    832\n13    16    0.927 -0.6080         0.9500     240     191.0    751\n14    18    0.919 -0.6570         0.9450     207     160.0    683\n15    20    0.916 -0.6880         0.9510     181     134.0    626\n16    22    0.912 -0.7240         0.9490     160     114.0    578\n17    24    0.903 -0.7590         0.9440     142      97.5    536\n18    26    0.894 -0.7890         0.9380     128      84.3    500\n19    28    0.885 -0.8160         0.9330     115      72.9    468\n20    30    0.883 -0.8340         0.9360     105      63.8    439\n\n\nShow code\nwriteLines(\"Plotting the resutls from the network topology analysis\")\n\n\nPlotting the resutls from the network topology analysis\n\n\nShow code\nplot_network_topology(\n  data = sft,\n  height = 0.90\n)\n\n\n\n\n\n\n\n\n\n\nNOTE: The scale-free topology fit index reaches close to 1 (red horizontal line = 0.90) at a soft-thresholding-power == 9.\n\nNow, we can go ahead and create our adjacency matrix by power-transforming the similarity matrix (see WGCNA for more info).\n\n\nShow code\n## Specify the soft-thresholding-power\nsoft.power = 9\n\n# Construct adjacency matrix\n# TO DO: make function ----\nadj_matrix &lt;- WGCNA::adjacency.fromSimilarity(\n  sim_matrix,\n  power = soft.power,\n  type = \"signed\"\n)\n\n## Delete similarity matrix to free up memory\nrm(sim_matrix)\ngc()\n\n\n           used  (Mb) gc trigger   (Mb)  max used   (Mb)\nNcells  6571517 351.0   10586865  565.4  10586865  565.4\nVcells 40392609 308.2  137408637 1048.4 266461084 2033.0\n\n\n\n\nShow code\n# Convert adj_matrix to matrix\ngene_ids &lt;- rownames(adj_matrix)\n\nadj_matrix &lt;- matrix(adj_matrix, nrow=nrow(adj_matrix))\nrownames(adj_matrix) &lt;- gene_ids\ncolnames(adj_matrix) &lt;- gene_ids\n\nwriteLines(paste0(\"Plotting the power-transformed adjacency matrix for the same \", length(heatmap_indices),\" genes as above\"))\n\n\nPlotting the power-transformed adjacency matrix for the same 200 genes as above\n\n\nShow code\n## Same heatmap as before, but now with the power-transformed adjacency matrix\ngplots::heatmap.2(t(adj_matrix[heatmap_indices, heatmap_indices]),\n                  col=viridis::inferno(100),\n                  labRow=NA, labCol=NA,\n                  trace='none', dendrogram='row',\n                  xlab='Gene', ylab='Gene',\n                  main='Adjacency matrix\\n(power transformed)',\n                  density.info='none', revC=TRUE)"
  }
]